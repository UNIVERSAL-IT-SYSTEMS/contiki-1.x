-include *.u

.SECONDARY:

CC=cc65
AS=ca65
LD=ld65
CL=cl65

CFLAGSCC65=-I apps -I conf -I ctk -I lib -I loader -I uip \
       -I $(CONTIKICC65)/apps -I $(CONTIKICC65)/lib \
       -I $(CONTIKICC65)/loader -I $(CONTIKICC65)/uip \
       -I $(CONTIKI)/apps -I $(CONTIKI)/ctk -I $(CONTIKI)/ek \
       -I $(CONTIKI)/lib -I $(CONTIKI)/uip \
       -t $(SYS) --add-source --create-dep

CLFLAGS=-Ln contiki-labels

OPT=-Or

%.o: %.c

%.s: %.c
	$(CC) $(CFLAGS) $(OPT) -o $(notdir $@) $<

%.o: %.s
	$(AS) $(AFLAGS) -o $@ $<

%.o: %.S
	$(AS) $(AFLAGS) -o $@ $<

vpath %.c apps ctk lib loader uip \
	$(CONTIKICC65)/apps \
	$(CONTIKICC65)/lib \
	$(CONTIKICC65)/loader \
	$(CONTIKICC65)/uip \
	$(CONTIKI)/apps \
	$(CONTIKI)/ctk \
	$(CONTIKI)/ek \
	$(CONTIKI)/lib \
	$(CONTIKI)/uip

vpath %.S apps ctk lib loader uip \
	$(CONTIKICC65)/apps \
	$(CONTIKICC65)/lib \
	$(CONTIKICC65)/loader \
	$(CONTIKICC65)/uip \
	$(CONTIKI)/apps \
	$(CONTIKI)/ctk \
	$(CONTIKI)/ek \
	$(CONTIKI)/lib \
	$(CONTIKI)/uip

%.sav:  %.o contiki-labels.o
	cl65 --module -t $(SYS) -o $@ loader-arch-module.o $^

%.prg:  %.o contiki-labels.o
	cl65 --module -t $(SYS) -o $@ loader-arch-module.o $^

%.drv:  %-drv.o contiki-labels.o
	cl65 --module -t $(SYS) -o $@ loader-arch-module.o $^

%.drv:  %.o contiki-labels.o
	cl65 --module -t $(SYS) -o $@ loader-arch-module.o $^

%.dsc:  %-dsc.o contiki-labels.o
	cl65 --module -t $(SYS) -o $@ loader-arch-module-dsc.o $^

contiki-labels.s: contiki
	./$(CONTIKICC65)/make-labels

clean:
	rm -f *.o *~ *core contiki *.map *.s *.u *.dsc *.prg *.drv *.sav contiki-labels

codesize:
	od65 --dump-segsize *.o | egrep '\.o|CODE'
